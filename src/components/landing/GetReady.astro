---
import { EventProps } from '../../types/event'
import { getImageVariant } from '../../utils/imageConverter'
import { links } from '../../utils/links'

type Props = {
    events: Array<EventProps>
}

const {events} = Astro.props

const imageList = events.flatMap(event => event.data.images.map(image => image.image));
const randomizedImage = getRandomItems(imageList, 5);

function getRandomItems(array: string[], count: number): string[]{
    const shuffled = [...array].sort(() => Math.random() - 0.5)
    return shuffled.slice(0, count);
};

---
<script>
    import {gsap} from 'gsap';
    import ScrollTrigger from 'gsap/ScrollTrigger';
    gsap.registerPlugin(ScrollTrigger);

    setTimeout(() => {
        document.addEventListener('mousemove', (e) => {
        const header = document.getElementById('floating-header') as HTMLElement;
        const rect = header.getBoundingClientRect();
        const titleCenterX = rect.left + rect.width / 2;
        const titleCenterY = rect.top + rect.height / 2;
        const deltaX = e.clientX - titleCenterX;
        const deltaY = e.clientY - titleCenterY;
        const moveX = Math.min(Math.max(deltaX * 0.05, -8), 8);
        const moveY = Math.min(Math.max(deltaY * 0.05, -6), 6);
        header.style.transform = `translate(${moveX}px, ${moveY}px)`;
    });
    }, 1200)

    
    const wrapper = document.getElementById('getReady-wrapper');
    const cic = document.getElementById('getReady-cic');
    const timeline = gsap.timeline({
        scrollTrigger: {
            trigger: wrapper,
            start: 'top 60%',
            once: true
        },
    });

    timeline
        .to(wrapper, {
            autoAlpha: 1,
            duration: .1
        })
        .from(wrapper, {
            padding: '0px',
            duration: 1.5
        })
        .from(cic, {
            borderRadius: '0px',
            duration: 1.5
        }, '<')
        .from('#getReady-wrapper .background-image', {
            opacity: 0,
            scale: 1.1,
            duration: 3,
            ease: 'back.out'
        })
        .from('#getReady-wrapper .header-wrapper', {
            opacity: 0,
            duration: 1,
            ease: 'power1.out',
            stagger: 0.3
        }, .2)
        .to('#getReady-wrapper .header-wrapper', {
            scale: 1.2,
            duration: 1,
            ease: 'power4.out',
            yoyo: true,
            repeat: 1
        }, '<')
        .to('#getReady-wrapper #floating-header', {
            x: -5,
            y: 5,
            delay: 0.2,
            duration: .8,
            ease: 'power4.out',
            yoyo: true,
            repeat: 1
        }, '<')
        .from('#getReady-wrapper .image-wrapper', {
            opacity: 0,
            scale: 0.7,
            duration: 1,
            stagger: .2,
            ease: 'power1.out'
        }, '<+1')
        .from('#getReady-wrapper .cta-text p', {
            opacity: 0,
            duration: 2,
            ease: 'power1.out',
            stagger: 0.3
        }, '<+1')
        .from('#getReady-wrapper .cta-button .button', {
            opacity: 0,
            duration: 2,
            ease: 'power1.out'
        }, '<')

        document.addEventListener('DOMContentLoaded', () => {
        const links = document.querySelectorAll('.animated-link');

        links.forEach((link) => {
            link.addEventListener('click', (event) => {
                event.preventDefault();
                const target = link.getAttribute('data-target');
                if (target) {
                    const wrappers = document.querySelectorAll('.section-wrapper');
                    const cics = document.querySelectorAll('.cic');

                    const timeline = gsap.timeline({
                        defaults: { duration: 0.5, ease: "power1.inOut" },
                        onComplete: () => {
                            window.location.href = target;
                        },
                    });

                    timeline
                        .to('.cic > *', {
                            opacity: 0,
                        })
                        .to(wrappers, {
                            padding: 0,
                        }, '<')
                        .to(cics, {
                            borderRadius: '0px',
                        }, '<');
                } else {
                    console.error("No 'data-target' attribute found on the link.");
                }
            });
        });
    });
</script>

<section class="section-wrapper bg-pink color-pink" id="getReady-wrapper">
    <div class="cic" id="getReady-cic">
        <img src="/images/waves.jpg" class="background-image" alt="Wavy background"  loading="lazy" decoding="async">
        <div class="content-container">
            <div class="header-wrapper">
                <h1 id="floating-header" class="stroke-pink">GET READY</h1>
                <h1>GET READY</h1>
            </div>
            <div class="scroller">
                <div class="inner-scroller">
                    {randomizedImage.map((image, index)=> (
                        <div class={`image-wrapper ${index === 0 ? 'desktop-content' : ''}`}>
                            <picture>
                                <source srcset={getImageVariant(image, 'webp')} type="image/webp" />
                                <source srcset={getImageVariant(image, 'avif')} type="image/avif" />
                                <img src={image} class={`${index === 0 ? 'desktop-content' : ''}`} alt="Gallery image"  loading="lazy" decoding="async"/>
                            </picture>
                        </div>
                    ))}
                </div>
            </div>
            <div class="cta-wrapper">
                <div class="cta-text">
                    <p class="row-1">WORDS DON'T EVEN</p>
                    <p class="row-2">COME CLOSE</p>
                </div>
                <div class="cta-button">
                    <a href={links.gallery} class="button animated-link"  data-target='/gallery'>OUR GALLERY</a>
                </div>
            </div>
        </div>
    </div>
</section>

<style lang="scss">
    .section-wrapper{
            height: max-content !important;
    }
    .background-image {
        z-index: 0;
        position: absolute;
        inset: 0;
        width: 100%;
        height: 100%;
        object-fit: cover;
    }
    .scroller{
        display: flex;
        height: auto;
        margin: var(--spacing-xl) 0 var(--spacing-l) 0;
        overflow: hidden;

        .inner-scroller{
            width: 100%;
            display: flex;
            gap: var(--spacing-s);

            .image-wrapper{
                height: 500px;
                width: 200px;
                overflow: hidden;
                border-radius: var(--radius-xl);
                transition: width 0.8s var(--custom-ease-4), filter 0.5s var(--custom-ease-4);
                transition-delay: 0.1s;
                filter: brightness(50%);

                img{
                    width: 100%;
                    height: 100%;
                    object-fit: cover;
                }
            }
        }
    }

    .background-image{
        position: absolute;
        z-index: 0;
        filter: brightness(20%);
    }

    .content-container{
        position: inherit;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        overflow: visible;
        height: 100%;
    }
    .header-wrapper{
        flex: 1;
        display: flex;
        flex-direction: column;
        justify-content: end;
        position: relative;
        overflow: visible;
        flex: none;
        margin-top: var(--spacing-3xl);

        #floating-header{
            position: absolute;
            color: var(--loveless-black);
            transition: transform 0.2s ease-out;
        }
    }

    .cta-wrapper{
        flex: 1;
        display: flex;
        gap: var(--spacing-l);
        align-items: center;
        overflow: hidden;
        width: 100%;
        height: 100%;
        margin-bottom: var(--spacing-3xl);

        .cta-text{
            width: 300px;
            display: flex;
            flex-direction: column;
            align-items: center;
            overflow: hidden;
        }

        .cta-button{
            overflow: hidden;
            .button {
                display: block;
                height: max-content;
                padding: 12px 24px;
                background-color: var(--loveless-pink);
                color: var(--loveless-black);
                font-size: var(--font-size-l);
                font-weight: 700;
                border-radius: var(--radius-m);
                text-align: center;
                text-decoration: none;
                transition: background-color 0.3s;

                &:hover {
                    background-color: var(--loveless-pink-dark);
                }
            }
        }
    }

    .squiggly-line {
        fill: none;
        stroke: var(--loveless-pink);
        stroke-width: 4;
        stroke-miterlimit: 10;
        stroke-dasharray: 100;
    }

    @media screen and (max-width : 767px) {
        
        .header-wrapper{
            flex: none;
            margin-top: var(--spacing-3xl);
        }
        .image-wrapper{
            height: 400px !important;
        }
        .cta-wrapper{
            flex-direction: column;
        }

        .scroller {
            animation: rock 20s ease-in-out infinite alternate;
        }

        @keyframes rock {
            0% {
                transform: translateX(0%);
            }
            50% {
                transform: translateX(25%);
            }
            100% {
                transform: translateX(-25%);
            }
        }
    }
    @media screen and (min-width: 768px) and (max-width: 1079px) {
        
        .header-wrapper{
            flex: none;
            margin-top: var(--spacing-3xl);
        }
        .cta-wrapper{
            width: 80%;
            display: flex;
            justify-content: center;
            overflow: visible;
            .cta-text{
                overflow: visible;
                width: max-content;
                align-items: end !important;
                flex: 1;
                .row-1{
                    width: max-content;
                }
                p{
                    font-size: var(--font-size-xl);
                }
            }
            .cta-button{
                flex: 1;
                display: flex;
                align-items: center;
            }
        }
        .image-wrapper{
            height: 500px !important;

            &:hover{
                width: 500px !important;
                filter: brightness(90%) !important;
            }
        }
    }
    @media screen and (min-width : 1080px) {
        .section-wrapper{
            min-height: 100vh !important;
        }
        .cta-wrapper{
            width: 80%;
            display: flex;
            justify-content: center;
            overflow: visible;
            .cta-text{
                overflow: visible;
                width: max-content;
                align-items: end !important;
                flex: 1;
                .row-1{
                    width: max-content;
                }
                p{
                    font-size: var(--font-size-xl);
                }
                a{
                    flex: 1;
                }
            }
            .cta-button{
                flex: 1;
                display: flex;
                align-items: center;
            }
        }
        .image-wrapper:hover {
            width: 700px !important;
            filter: brightness(90%) !important;
        }
    }
</style>