---
import { links } from '../utils/links';
import type { EventProps } from '../types/event'
interface Props {
	upcoming: boolean;
	align: string;
	event?: EventProps;
}

const { upcoming, align, event } = Astro.props;
const eventDate = new Date(event?.data.date);
const eventDay = eventDate.getDate()
const eventMonth = eventDate.toLocaleString('default', {month: 'long'}).slice(0, 3).toUpperCase();
---

<div style="width: 100%;" class={`align-row-${align}`}>
	<div class="card-wrapper">
		<a href={upcoming ? event?.data.ticketLink : `${links.gallery}?id=${event?.id}`} target={upcoming ? "_blank" : "_self"}>
			<div class="date-card">
				<p class="day">{eventDay}</p>
				<p class="month">{eventMonth}</p>
			</div>
			<div class="card-image">
				<img src={event?.data.banner} alt="Event Image">
			</div>
			<div class="card-content">
				<div class="text">
					<h3 class="card-title">{event?.data.title}</h3>
					<p class="card-description">{event?.data.description}</p>
				</div>
				<div class="buttons">
					{upcoming ?
						<a href={event?.data.ticketLink} class="button primary" target="_blank">TICKETS</a>
						:
						<a href={links.gallery} class="button secondary">GALLERY</a>
					}
				</div>
			</div>
		</a>
	</div>
</div>

<style lang="scss">
	.card-wrapper{
		z-index: 50;
		position: relative;
		width: 846px;
		height: 454px;
		overflow: hidden;
		border-radius: var(--radius-l);
		&:hover img{
			transform: scale(1.1);
		}
	}

	.date-card{
		z-index: 100;
		position: absolute;
		top: 10px;
		right: 10px;
		width: 80px;
		display: flex;
		flex-direction: column;
		align-items: center;
		justify-content: center;
		background-color: var(--loveless-black);
		border-radius: var(--radius-l);

		.day{
			font-size: var(--font-size-xl);
			width: 100%;
			height: 100%;
			padding: var(--spacing-2xs) 0;
			background-color: var(--loveless-blue);
			color: var(--loveless-black);
			font-weight: 700;
			text-align: center;
		}
		.month{
			text-align: center;
			padding: var(--spacing-2xs) 0;
			font-size: var(--font-size-l);
		}
	}

	.card-image{
		z-index: 60;
		position: absolute;
		width: 100%;
		height: 100%;
		overflow: hidden;
		img{
			width: 100%;
			height: 100%;
			object-fit: cover;
			transition: transform 0.3s var(--custom-ease-1);
		}
	}

	.card-content{
		position: absolute;
		z-index: 100;
		display: flex;
		justify-content: space-between;
		bottom: 0;
		width: 100%;
		height: auto;
		padding: var(--spacing-m);
		color: var(--loveless-black);
		background-color: var(--loveless-blue);
		.text{
			flex: 1 1 70%;
			.card-title{
				font-family: 'Mortend';
				font-size: var(--font-size-xl);
			}
			p{
				font-size: var(--font-size-m);
			}
		}
		.buttons{
			flex: 1 1 30%;
			display: flex;
			align-items: center;
			justify-content: center;
			overflow: visible;
			width: 100%;

			.button{
				background: none;
				color: inherit;
				border: none;
				padding: 0;
				font: inherit;
				cursor: pointer;
				outline: inherit;
				padding: var(--spacing-s) var(--spacing-m);
				border-radius: var(--radius-l);
				border: 2px solid var(--loveless-black);
				transition: transform 0.3s var(--custom-ease-1);
				&:hover{
					transform: scale(1.05);
				}
			}
			.primary{
				background-color: var(--loveless-black);
				color: var(--loveless-blue);
			}
			.secondary{
			}
		}
	}

@media screen and (max-width : 767px) {
 .card-content{
	flex-direction: column;
	gap: var(--spacing-m);
	.card-title{
		font-size: var(--font-size-l) !important;
		text-align: center;
	}
	.buttons{
		.button{
			width: 100%;
			text-align: center;
		}
	}
 }
 .date-card{
	width: 60px;
	.day{
		font-size: var(--font-size-l) !important;
	}
	.month{
		font-size: var(--font-size-m);
	}
}
}
@media screen and (min-width: 768px) and (max-width: 1079px) {
	.buttons{
		padding-left: var(--spacing-s);
		.button{
			width: 100%;
			text-align: center;
		}
	}
}
@media screen and (min-width : 1080px) {
	.buttons{
		padding-left: var(--spacing-s);
		.button{
			width: 100%;
			text-align: center;
		}
	}
}
</style>
