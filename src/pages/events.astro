---
import Layout from '../layouts/Layout.astro';
import Card from '../components/Card.astro';
import Return from '../components/Return.astro';
import { getCollection } from 'astro:content';
import { EventProps } from '../types/event';
import { links } from '../utils/links';

const allEvents = await getCollection('events') as Array<EventProps>;

const now = new Date()

const upcomingEvents = allEvents.filter(event => new Date(event.data.date) > now);

const pastEvents = allEvents.filter(event => new Date(event.data.date) < now);
---
<script>
    import {gsap} from 'gsap';
    
    const wrapper = document.getElementsByClassName('events-wrapper');
    const cic = document.getElementsByClassName('events-cic');
    const timeline = gsap.timeline();

    timeline
        .to(wrapper, {
                autoAlpha: 1,
                duration: .3
            })
        .from(wrapper, {
            padding: '0px',
            duration: 1
        }, 0)
        .from(cic, {
            borderRadius: '0px',
            duration: 1
        }, '<')
        .from('.events-wrapper .header-wrapper', {
            opacity: 0,
            duration: 1,
        }, .5)
        .to('.events-wrapper .front', {
            scale: 1.2,
            yoyo: true,
            duration: .7,
            repeat: 1,
            ease: 'power2.inOut'
        }, '<+.2')
        .from('.events-wrapper .back-1', {
            y: 0,
        }, '-=.5')
        .from('.events-wrapper .back-2', {
            y: 0,
        }, '<')
        .from('.content-wrapper', {
            opacity: 0,
            stagger: 0.3
        }, '-=.5')
        .from('#upcoming-header', {
            x: '50%',
            duration: 1
        }, '<')
        .from('#past-header', {
            x: '-50%',
            duration: 1
        }, '<')
        .from('.events-wrapper .return-wrapper', {
            x: '-150%',
            duration: 1
        })

        document.addEventListener('DOMContentLoaded', () => {
        const links = document.querySelectorAll('.animated-link');

        links.forEach((link) => {
            link.addEventListener('click', (event) => {
                event.preventDefault();

                // Safely get the target attribute
                const target = link.getAttribute('data-target');

                // Select elements
                const wrappers = document.querySelectorAll('.events-wrapper');
                const cics = document.querySelectorAll('.events-cic');

                if (target) {
                    // If data-target exists, perform this animation
                    const timeline = gsap.timeline({
                        defaults: { duration: 0.2, ease: "power1.inOut" },
                        onComplete: () => {
                            window.location.href = target;
                        },
                    });

                    timeline
                        .to('.events-cic > *', {
                            opacity: 0
                        })
                        .to(wrappers, {
                            padding: 0,
                            duration: 1
                        }, '<')
                        .to(cics, {
                            borderRadius: '0px',
                            duration: 1
                        }, '<');
                } else {
                    console.error("error navigating from events")
                }
            });
        });
    });
</script>

<Layout title="Events - Mr Loveless Brisbane">
	<main>
		<section class="events-wrapper bg-blue color-blue">
            <div class="events-cic">
                <Return color="blue"/>
                <div class="header-wrapper">
                    <h1 class="back-1 stroke-blue">WHAT'S ON</h1>
                    <h1 class="back-2 stroke-blue">WHAT'S ON</h1>
                    <h1 class="front">WHAT'S ON</h1>
                </div>
                <div class="content-wrapper">
                    <div class="content-header">
                        <h1 class="stroke-blue" id="upcoming-header">UPCOMING EVENTS</h1>
                    </div>
                    {upcomingEvents.length > 0 ?
                        upcomingEvents.map((event: EventProps, index) => (
                            <div class="cards" data-index={index}>
                                <Card event={event} upcoming={true} align={index % 2 === 0 ? 'right' : 'left'}/>
                            </div>
                        ))
                        :
                        <a href={links.instagram} target="_blank" class="no-event">STAY TUNED FOR MORE</a>
                    }
                    <div class="content-header align-row-right">
                        <h1 class="stroke-blue two" id="past-header">PAST EVENTS</h1>
                    </div>
                    {pastEvents.length > 0 ?
                        pastEvents.map((event: EventProps, index) => (
                            <div class="cards" data-index={index}>
                                <Card event={event} upcoming={false} align={index % 2 === 0 ? 'right' : 'left'}/>
                            </div>
                        ))
                        :
                        <a href={links.instagram} target="_blank" class="no-event">STAY TUNED FOR MORE</a>
                    }
                </div>
            </div>
        </section>
	</main>
</Layout>

<style lang="scss">
    .no-event{
        margin: 0 auto;
        font-family: 'Mortend', sans-serif;
        text-align: center;
        justify-self: center;
        border: 2px solid var(--loveless-blue);
        border-radius: var(--radius-l);
        padding: var(--spacing-l);
        box-shadow: 0 0 10px var(--loveless-blue);
        transition: all 0.3s var(--custom-ease-1);
        span{
            font-size: var(--font-size-xl);
        }
        &:hover{
            transform: scale(1.1);
        }
    }
    
    .events-wrapper {
        width: 100%;
        min-height: 100vh;
        padding: var(--spacing-s);
        display: flex;
        flex-direction: column;
        visibility: hidden;
        
        .events-cic {
            position: relative;
            width: 100%;
            height: 100%;
            display: flex;
            flex-direction: column;
            flex-grow: 1;
            justify-content: flex-start;
            align-items: center;
            border-radius: var(--radius-2xl);
            background-color: var(--loveless-black);
            overflow: hidden;
            padding: var(--spacing-2xl);
        }
        h1{
            padding: 2px;
        }
    }

    .header-wrapper{
        z-index: 0;
        position: relative;
        overflow: visible;
        margin: var(--spacing-5xl);
        cursor: default;
        min-width: max-content;

        .back-1{
            z-index: 10;
            color: var(--loveless-black);
            position: absolute;
            transform: translateY(var(--spacing-2xl));
        }
        .back-2{
            z-index: 10;
            color: var(--loveless-black);
            position: absolute;
            transform: translateY(calc(-1 * var(--spacing-l)));
        }
        .front{
            position: relative;
            width: 105%;
            z-index: 20;
            font-family: 'Mortend', 'sans-serif';
            font-size: var(--font-size-6xl);
            display: inline-block;
            padding-top: 10px;
            background-color: var(--loveless-black);
        }
    }

    .content-wrapper{
        width: 80vw;
        max-width: 1300px;
        display: flex;
        flex-direction: column;
        gap: var(--spacing-2xl);
        .content-header{
            border-bottom: 1px solid var(--loveless-blue);
            display: flex;
            
            h1{
                color: var(--loveless-black);
            }
        }
        .cards{
            display: flex;
            flex-direction: column;
            gap: var(--spacing-4xl);
        }
    }

    @media screen and (max-width : 767px) {
        .events-wrapper{
            padding: var(--spacing-2xs);
        } 
        .header-wrapper {
            margin-top: var(--spacing-2xl);
            margin-bottom: var(--spacing-3xl);

            .back-1 {
                transform: translateY(28px);
            }

            .back-2 {
                transform: translateY(-10px);
            }
        }
        .content-header{
            h1{
                font-size: var(--font-size-xl) !important;
            }
        }
    }
    @media screen and (min-width: 768px) and (max-width: 1079px) {
        .events-wrapper{
            padding: var(--spacing-xs);
        } 
        .content-header{
            h1{
                font-size: var(--font-size-2xl) !important;
            }
        }
        
    }
    @media screen and (min-width : 1080px) {
        .content-header{
            h1{
                font-size: var(--font-size-4xl) !important;
            }
        }
        
    }
</style>